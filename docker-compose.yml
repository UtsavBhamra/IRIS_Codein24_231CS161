version: '3.8'

services:
  rails-app-1:
    build:
      context: .
      dockerfile: Dockerfile
    image: iris-web-task-app-img-1
    ports:
      - "3001:3000"
    volumes:
      - .:/app
      - rails-app-1-tmp:/app/tmp
      - ./db/development.sqlite3:/app/db/development.sqlite3
    environment:
      - PORT=3000
  rails-app-2:
    build:
      context: .
      dockerfile: Dockerfile
    image: iris-web-task-app-img-2
    ports:
      - "3002:3000"
    volumes:
      - .:/app
      - rails-app-2-tmp:/app/tmp
      - ./db/development.sqlite3:/app/db/development.sqlite3
    environment:
      - PORT=3000
  rails-app-3:
    build:
      context: .
      dockerfile: Dockerfile
    image: iris-web-task-app-img-3
    ports:
      - "3003:3000"
    volumes:
      - .:/app
      - rails-app-3-tmp:/app/tmp    #using a seperate named volume to make sure each container has seperate tmp/pids folder to enable multiple container to start at once
      - ./db/development.sqlite3:/app/db/development.sqlite3
    environment:
      - PORT=3000
  iris-nginx:                         #wait for some time and allow all 3 containers to startup
    image: nginx:1.27-alpine-slim
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
volumes:
  rails-app-1-tmp:
  rails-app-2-tmp:
  rails-app-3-tmp:
